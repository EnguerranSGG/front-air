---
const pathName = "BPI";
let steps = [];

try {
  const res = await fetch(`${import.meta.env.PUBLIC_API_URL}/paths/by-name/${pathName}`);
  const pathData = await res.json();
  const pathId = pathData?.path_id;

  if (pathId) {
    const resSteps = await fetch(`${import.meta.env.PUBLIC_API_URL}/steps/by-path/${pathId}`);
    const data = await resSteps.json();
    steps = Array.isArray(data) ? data : [];
  }
} catch (err) {
  console.error("Erreur lors du fetch des étapes :", err);
}
---

<section class="bpi-steps-section">
  <h2>Accompagnement du bénéficiaire de la protection internationale</h2>
  <div class="bpi-steps-timeline">
    {steps.map((step, index) => (
      <div class={`bpi-step-item ${index % 2 === 0 ? 'left' : 'right'}`} key={step.step_id}>
        <div class="bpi-step-content">
          <h3>{step.name}</h3>
          <p>{step.description}</p>
          {step.file_id && (
            <img
              src={`${import.meta.env.PUBLIC_ASSET_URL}/files/${step.file_id}/download`}
              alt={step.name}
            />
          )}
        </div>
      </div>
    ))}
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate');
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    const stepItems = document.querySelectorAll('.bpi-step-item');
    stepItems.forEach((item) => {
      observer.observe(item);
    });
  });
</script>
