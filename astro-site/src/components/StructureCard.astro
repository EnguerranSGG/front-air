---
const { structure } = Astro.props;
const hasImage = structure?.file_id;
const baseUrl = import.meta.env.PUBLIC_ASSET_URL;
---

<div class="structure-card" data-animate="true">
  {hasImage && (
    <div class="structure-image">
      <img src={`${baseUrl}/files/${structure.file_id}/download`} alt={structure.name} />
    </div>
  )}

  <div class="structure-content">
    <h3 class="structure-title">{structure?.name ?? 'Nom manquant'}</h3>
    <p class="structure-description">{structure?.description ?? ''}</p>

    {structure?.link && (
      <p class="structure-link-container">
        <a href={structure.link} target="_blank" rel="noopener noreferrer" class="structure-link">
          <svg class="icon link-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          Lien vers la structure
        </a>
      </p>
    )}

    {structure?.phone_number && (
      <p class="structure-info">
        <svg class="icon phone-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        {structure.phone_number}
      </p>
    )}

    {structure?.address && (
      <p class="structure-info">
        <svg class="icon location-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <circle cx="12" cy="10" r="3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        {structure.address}
      </p>
    )}

    {structure?.missions?.length > 0 && (
      <div class="structure-missions-container">
        <p class="structure-mission-title"><strong>Missions :</strong></p>
        <ul class="structure-missions">
          {structure.missions.map((mission) => (
            <li>{mission.content}</li>
          ))}
        </ul>
      </div>
    )}
  </div>
</div>

<style>
  .structure-card {
    display: flex;
    flex-direction: column;
    height: 100%;
    background: #e6ebf5;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .structure-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .structure-image {
    flex-shrink: 0;
  }

  .structure-image img {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  .structure-content {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 1.5rem;
  }

  .structure-title {
    margin: 0 0 1rem 0;
    font-size: 1.25rem;
    font-weight: bold;
    color: #333;
  }

  .structure-description {
    margin: 0 0 1rem 0;
    color: #666;
    line-height: 1.5;
    flex: 1;
  }

  .structure-link-container {
    margin: 0 0 1rem 0;
  }

  .structure-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: #0046a4;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;
  }

  .structure-link:hover {
    color: #003380;
  }

  .structure-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin: 0 0 0.5rem 0;
    color: #666;
    font-size: 0.9rem;
  }

  .structure-missions-container {
    margin-top: auto;
  }

  .structure-mission-title {
    margin: 0 0 0.5rem 0;
    color: #333;
    font-size: 0.9rem;
  }

  .structure-missions {
    margin: 0;
    padding-left: 1.5rem;
    color: #666;
    font-size: 0.9rem;
  }

  .structure-missions li {
    margin-bottom: 0.25rem;
  }

  .icon {
    width: 1rem;
    height: 1rem;
    flex-shrink: 0;
  }

  .link-icon {
    width: 1.2rem;
    height: 1.2rem;
  }

  /* Animation pour les cartes */
  .structure-card[data-animate="true"] {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
